{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query USER_ORDERS_QUERY($id: ID!) {\\n    allOrders {\\n      id\\n      charge\\n      total\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\nvar USER_ORDERS_QUERY = gql(_templateObject());\nexport default function OrdersPage() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(USER_ORDERS_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Item Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qty: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Each: \", formatMoney(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Subtotal: \", item.quantity * item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrdersPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = OrdersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"sources":["/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/pages/orders.js"],"names":["useQuery","gql","Head","ErrorMessage","OrderStyles","formatMoney","USER_ORDERS_QUERY","OrdersPage","variables","id","query","data","error","loading","order","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY($id: ID!) {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function OrdersPage() {\n  const { data, error, loading } = useQuery(USER_ORDERS_QUERY, {\n    variables: { id: query.id },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const { order } = data;\n\n  return (\n    <OrderStyles>\n      <Head>\n        <title>Sick fits - {order.id}</title>\n      </Head>\n      <p>\n        <span>Order Id:</span>\n        <span>{order.id}</span>\n      </p>\n      <p>\n        <span>Charge:</span>\n        <span>{order.charge}</span>\n      </p>\n      <p>\n        <span>Order Total:</span>\n        <span>{formatMoney(order.total)}</span>\n      </p>\n      <p>\n        <span>Item Count:</span>\n        <span>{order.items.length}</span>\n      </p>\n      <div className='items'>\n        {order.items.map((item) => (\n          <div className='order-item' key={item.id}>\n            {' '}\n            <img src={item.photo.image.publicUrlTransformed} alt={item.title} />\n            <div className='item-details'>\n              <h2>{item.name}</h2>\n              <p>Qty: {item.quantity}</p>\n              <p>Each: {formatMoney(item.price)}</p>\n              <p>Subtotal: {item.quantity * item.price}</p>\n              <p>{item.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </OrderStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}