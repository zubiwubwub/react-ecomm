{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/lib/cartState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // This is our own custom provider we will store data (state) and fucntionality (updaters) and anyone can access it via consumer\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  // use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAA3B;AAAA,cAA0CD;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;AACA,SAASG,OAAT,GAAmB;AACjB;AACA,QAAMC,GAAG,GAAGV,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACD;;AAED,SAASL,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // This is our own custom provider we will store data (state) and fucntionality (updaters) and anyone can access it via consumer\n\n  const [cartOpen, setCartOpen] = useState(false);\n\n  return (\n    <LocalStateProvider value={{ cartOpen }}>{children}</LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}