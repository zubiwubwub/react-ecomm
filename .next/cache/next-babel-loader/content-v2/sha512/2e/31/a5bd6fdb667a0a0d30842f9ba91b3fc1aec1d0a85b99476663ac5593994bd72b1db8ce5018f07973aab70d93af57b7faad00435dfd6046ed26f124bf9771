{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/components/Reset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION(\\n    $email: String!\\n    $password: String!\\n    $token: String!\\n  ) {\\n    redeemUserPasswordResetToken(\\n      email: $email\\n      token: $token\\n      password: $password\\n    ) {\\n      code\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nvar RESET_MUTATION = gql(_templateObject());\nexport default function Reset() {\n  _s();\n\n  var _data$redeemUserPassw;\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(RESET_MUTATION, {\n    variables: inputs // Refetch currently logged in user\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      reset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  var error = data !== null && data !== void 0 && (_data$redeemUserPassw = data.redeemUserPasswordResetToken) !== null && _data$redeemUserPassw !== void 0 && _data$redeemUserPassw.code ? data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken : undefined;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // stop the form from submitting\n\n              console.log(inputs);\n              _context.next = 4;\n              return reset()[\"catch\"](console.error);\n\n            case 4:\n              res = _context.sent;\n              console.log(res);\n              console.log({\n                data: data,\n                loading: loading,\n                error: error\n              });\n              resetForm(); // send the email and password to graphql api\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! You can now Sing in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"You Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reset, \"alDvxMuZNB4mp77alRXABwWf3Ek=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/components/Reset.js"],"names":["gql","useMutation","Form","useForm","Error","RESET_MUTATION","Reset","email","password","token","inputs","handleChange","resetForm","variables","reset","data","loading","error","redeemUserPasswordResetToken","code","undefined","handleSubmit","e","preventDefault","console","log","res"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  ) {\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function Reset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n    password: '',\n    token: '',\n  });\n  const [reset, { data, loading }] = useMutation(RESET_MUTATION, {\n    variables: inputs,\n    // Refetch currently logged in user\n  });\n  const error = data?.redeemUserPasswordResetToken?.code\n    ? data?.redeemUserPasswordResetToken\n    : undefined;\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n    console.log(inputs);\n    const res = await reset().catch(console.error);\n    console.log(res);\n    console.log({ data, loading, error });\n    resetForm();\n    // send the email and password to graphql api\n  }\n\n  return (\n    <Form method='POST' onSubmit={handleSubmit}>\n      <h2>Reset your password</h2>\n      <Error error={error} />\n      <fieldset>\n        {data?.redeemUserPasswordResetToken === null && (\n          <p>Success! You can now Sing in</p>\n        )}\n\n        <label htmlFor='email'>\n          Email{' '}\n          <input\n            type='email'\n            name='email'\n            placeholder='You Email Address'\n            autoComplete='email'\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor='password'>\n          Password\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            autoComplete='password'\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type='submit'>Request Reset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}