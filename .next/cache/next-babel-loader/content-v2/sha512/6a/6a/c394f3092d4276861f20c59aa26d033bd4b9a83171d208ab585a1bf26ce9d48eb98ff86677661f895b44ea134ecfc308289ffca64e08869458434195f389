{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/components/RequestRest.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION(\\n    $email: String!\\n    $name: String!\\n    $password: String!\\n  ) {\\n    createUser(data: { email: $email, name: $name, password: $password }) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function RequestReset() {\n  _s();\n\n  var _useForm = useForm({\n    email: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // Refetch currently logged in user\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // stop the form from submitting\n\n              console.log(inputs);\n              _context.next = 4;\n              return signup()[\"catch\"](console.error);\n\n            case 4:\n              res = _context.sent;\n              console.log(res);\n              console.log({\n                data: data,\n                loading: loading,\n                error: error\n              });\n              resetForm(); // send the email and password to graphql api\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"You Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequestReset, \"fSO9UAX3bbbf5xQ0esX282JvdkI=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = RequestReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/components/RequestRest.js"],"names":["gql","useMutation","Form","useForm","Error","REQUEST_RESET_MUTATION","RequestReset","email","inputs","handleChange","resetForm","variables","signup","data","loading","error","handleSubmit","e","preventDefault","console","log","res"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,sBAAsB,GAAGL,GAAH,mBAA5B;AAcA,eAAe,SAASM,YAAT,GAAwB;AAAA;;AAAA,iBACOH,OAAO,CAAC;AAClDI,IAAAA,KAAK,EAAE;AAD2C,GAAD,CADd;AAAA,MAC7BC,MAD6B,YAC7BA,MAD6B;AAAA,MACrBC,YADqB,YACrBA,YADqB;AAAA,MACPC,SADO,YACPA,SADO;;AAAA,qBAIMT,WAAW,CACpDI,sBADoD,EAEpD;AACEM,IAAAA,SAAS,EAAEH,MADb,CAEE;;AAFF,GAFoD,CAJjB;AAAA;AAAA,MAI9BI,MAJ8B;AAAA;AAAA,MAIpBC,IAJoB,kBAIpBA,IAJoB;AAAA,MAIdC,OAJc,kBAIdA,OAJc;AAAA,MAILC,KAJK,kBAILA,KAJK;;AAAA,WAYtBC,YAZsB;AAAA;AAAA;;AAAA;AAAA,6EAYrC,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF,GADF,CACsB;;AACpBC,cAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AAFF;AAAA,qBAGoBI,MAAM,WAAN,CAAeO,OAAO,CAACJ,KAAvB,CAHpB;;AAAA;AAGQM,cAAAA,GAHR;AAIEF,cAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,OAAO,EAAPA,OAAR;AAAiBC,gBAAAA,KAAK,EAALA;AAAjB,eAAZ;AACAL,cAAAA,SAAS,GANX,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZqC;AAAA;AAAA;;AAsBrC,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEM,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,4BACQ,GADR,eAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,mBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEP,MAAM,CAACD,KALhB;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA1CuBH,Y;UACsBH,O,EAGDF,W;;;KAJrBK,Y","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    createUser(data: { email: $email, name: $name, password: $password }) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n  });\n  const [signup, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n      // Refetch currently logged in user\n    }\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n    console.log(inputs);\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({ data, loading, error });\n    resetForm();\n    // send the email and password to graphql api\n  }\n\n  return (\n    <Form method='POST' onSubmit={handleSubmit}>\n      <h2>Reset your password</h2>\n      <Error error={error} />\n      <fieldset>\n        <label htmlFor='email'>\n          Email{' '}\n          <input\n            type='email'\n            name='email'\n            placeholder='You Email Address'\n            autoComplete='email'\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <button type='submit'>Request Reset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}