{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react/cjs/react';\nexport default function useForm(initial = {}) {\n  // create a state object for input\n  const [inputs, setInputs] = useState(initial);\n}\n\nfunction handleChange(e) {\n  setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n    [e.target.name]: e.target.value\n  })); // return the things we want to surface from the custom hook\n\n  return {\n    inputs,\n    handleChange\n  };\n}","map":{"version":3,"sources":["/Users/zubenko/code/projects/React/WESBOS/Advanced-React-master 2/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","name","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,eAAe,SAASC,OAAT,CAAiBC,OAAO,GAAG,EAA3B,EAA+B;AAC5C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,OAAD,CAApC;AACD;;AAED,SAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBF,EAAAA,SAAS,iCAEJD,MAFI;AAGP,KAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAHnB,KAAT,CADuB,CAOvB;;AACA,SAAO;AACLN,IAAAA,MADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useState } from 'react/cjs/react';\n\nexport default function useForm(initial = {}) {\n  // create a state object for input\n  const [inputs, setInputs] = useState(initial);\n}\n\nfunction handleChange(e) {\n  setInputs({\n    // copy the existing state\n    ...inputs,\n    [e.target.name]: e.target.value,\n  });\n\n  // return the things we want to surface from the custom hook\n  return {\n    inputs,\n    handleChange,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}